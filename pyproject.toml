[tool.poetry]
name = "navgreen"
packages = [ {include = "live_data_analysis"},
             {include = "hist_data_analysis"} ]
version = "0.1"
description = ""
authors = [ "Tatiana Boura <tat.boura@gmail.com>",
	    "Natalia Koliou <natalykoliou@yahoo.gr>",
	    "Stasinos Konstantopoulos <konstant@iit.demokritos.gr>" ]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pandas = "^2.1"
numpy = "^1.26"
scipy = "^1.11"
scikit-learn = "^1.4"
matplotlib = "^3.8"

# Live data
influxdb-client = "^1.38"
pymodbus = "^3.5.4"
seaborn = "^0.13.2"

# Parsing weather forecast HTML
beautifulsoup4 = "^4.12"
dateparser = "^1.2"
tzlocal = "^5"
tqdm = "^4.66.2"
pyyaml = "^6.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
tester_influx = "scripts:test_influx"
tester_hist_data_navgreen = "scripts:test_navgreen_hist_data"
sampler = "hist_data_analysis:runme"
correlate = "hist_data_analysis:correlate"
visualize = "hist_data_analysis:main"
sample_input = "live_data_analysis:create_sample_input"
mTAN = "hist_data_analysis:mTAN"
mtan_tuning = "hist_data_analysis:hyper_tuning"
interp_tuning = "hist_data_analysis:interp_hyper_tuning"
interpolation = "hist_data_analysis:interpolation"
value_checker = "navgreen_base:value_alarms"
train_transformer = "hist_data_analysis.transformer.train:main"
test_transformer = "hist_data_analysis.transformer.test:main"
tune_transformer = "hist_data_analysis.transformer.tune:main"
weather = "navgreen_base:weather"
create_classif_data = "hist_data_analysis:create_classif_data"
train_models = "hist_data_analysis:train_models"
eval_models = "hist_data_analysis:eval_models"